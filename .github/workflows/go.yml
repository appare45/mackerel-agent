name: Go

on: [push]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - run: make lint
    - run: make convention
    - run: make cover
    - run: test `gofmt -l . | wc -l` = 0
    - run: make crossbuild
    - uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: .profile.cov

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    # if: github.ref == 'refs/heads/master'
    env:
      DEBIAN_FRONTEND: noninteractive
      GO111MODULE: on
    steps:
    # before-deploy
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - run: docker pull mackerel/docker-mackerel-rpm-builder:c7
    - run: docker pull mackerel/docker-mackerel-deb-builder
    - run: make rpm deb rpm-kcps deb-kcps rpm-stage deb-stage tgz
    - run: make crossbuild
    - run: go get github.com/x-motemen/gobump/cmd/gobump
    - run: go get github.com/mackerelio/golib/cmd/mackerel-github-release
    - uses: actions/upload-artifact@v2
      with:
        name: package releases
        path: |
          rpmbuild/RPMS/*/*.rpm
          packaging/*.deb
          snapshot/*.{zip, tgz}
    # deploy
    #- run: mackerel-github-release -dry-run
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: mackerel-github-release -staging -dry-run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
